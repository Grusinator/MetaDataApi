# Generated by Django 3.0.5 on 2021-02-27 18:34

import MetaDataApi.custom_storages
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import generic_serializer.serializable_model
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now=True)),
                ('data_file', models.FileField(storage=MetaDataApi.custom_storages.PrivateMediaStorage(), upload_to='datafiles/')),
                ('label_info', jsonfield.fields.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon_image_url', models.URLField(blank=True, null=True)),
                ('provider_name', models.CharField(max_length=50, unique=True)),
                ('provider_url', models.URLField(blank=True, null=True)),
                ('api_endpoint', models.CharField(blank=True, max_length=255, null=True)),
            ],
            bases=(models.Model, generic_serializer.serializable_model.SerializableModel),
        ),
        migrations.CreateModel(
            name='OauthConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorize_url', models.TextField()),
                ('access_token_url', models.TextField()),
                ('client_id', models.TextField()),
                ('client_secret', models.TextField()),
                ('scope', jsonfield.fields.JSONField()),
                ('data_provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='oauth_config', to='dataproviders.DataProvider')),
            ],
            bases=(models.Model, generic_serializer.serializable_model.SerializableModel),
        ),
        migrations.CreateModel(
            name='HttpConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', jsonfield.fields.JSONField(blank=True, null=True)),
                ('url_encoded_params', jsonfield.fields.JSONField(blank=True, null=True)),
                ('body_type', models.TextField(blank=True, null=True)),
                ('body_content', models.TextField(blank=True, null=True)),
                ('request_type', models.TextField(blank=True, null=True)),
                ('data_provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='http_config', to='dataproviders.DataProvider')),
            ],
            bases=(models.Model, generic_serializer.serializable_model.SerializableModel),
        ),
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint_name', models.TextField()),
                ('endpoint_url', models.TextField()),
                ('request_type', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE'), ('UPDATE', 'UPDATE')], default='GET', max_length=10)),
                ('api_type', models.CharField(choices=[('OauthRest', 'OauthRest'), ('OauthGraphql', 'OauthGraphql'), ('TokenRest', 'TokenRest')], default='OauthRest', max_length=15)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endpoints', to='dataproviders.DataProvider')),
            ],
            bases=(models.Model, generic_serializer.serializable_model.SerializableModel),
        ),
        migrations.CreateModel(
            name='DataFileUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file_from_source', models.FileField(storage=MetaDataApi.custom_storages.PrivateMediaStorage(), upload_to='datafiles/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('has_been_refined', models.BooleanField(default=False)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datafileupload', to='dataproviders.DataProvider')),
                ('refined_data_file', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datafileupload', to='dataproviders.DataFile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datafileupload', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.AddField(
            model_name='datafile',
            name='data_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataproviders.DataProvider'),
        ),
        migrations.AddField(
            model_name='datafile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DataFetch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file_from_source', models.FileField(storage=MetaDataApi.custom_storages.PrivateMediaStorage(), upload_to='datafiles/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('has_been_refined', models.BooleanField(default=False)),
                ('parameters', jsonfield.fields.JSONField(blank=True, null=True)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_fetches', to='dataproviders.DataProvider')),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_fetches', to='dataproviders.Endpoint')),
                ('refined_data_file', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_fetches', to='dataproviders.DataFile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_fetches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'data fetches',
                'abstract': False,
                'default_related_name': 'data_fetches',
            },
        ),
        migrations.CreateModel(
            name='DataProviderUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=255)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_type', models.CharField(blank=True, max_length=32, null=True)),
                ('expires_in', models.IntegerField(blank=True, null=True)),
                ('data_fetching_is_active', models.BooleanField(default=True)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provider_users', to='dataproviders.DataProvider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provider_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'data_provider_users',
                'unique_together': {('data_provider', 'user')},
            },
        ),
    ]
