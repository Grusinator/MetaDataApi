# Generated by Django 2.1.15 on 2019-12-16 07:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import MetaDataApi.custom_storages


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoolAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField()),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='DateTimeAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DateTimeField()),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='FileAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value',
                 models.FileField(storage=MetaDataApi.custom_storages.PrivateMediaStorage(), upload_to='datafiles/')),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='FloatAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='ImageAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value',
                 models.ImageField(storage=MetaDataApi.custom_storages.PrivateMediaStorage(), upload_to='images')),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='IntAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='RDFDataDump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now=True)),
                ('rdf_file', models.FileField(storage=MetaDataApi.custom_storages.PrivateMediaStorage(),
                                              upload_to='datapoints/audio')),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(unique=True)),
                ('rdfs_file',
                 models.FileField(blank=True, null=True, storage=MetaDataApi.custom_storages.PublicMediaStorage(),
                                  upload_to='schemas')),
            ],
        ),
        migrations.CreateModel(
            name='SchemaAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('data_type', models.TextField(
                    choices=[('DateTime', 'DateTime'), ('Number', 'Number'), ('Integer', 'Integer'),
                             ('Boolean', 'Boolean'), ('String', 'String'), ('File', 'File'), ('Image', 'Image'),
                             ('Undefined', 'Undefined')])),
            ],
        ),
        migrations.CreateModel(
            name='SchemaEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchemaNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schema_nodes',
                                             to='metadata.Schema')),
            ],
        ),
        migrations.CreateModel(
            name='StringAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stringattribute',
                                           to='metadata.SchemaAttribute')),
                ('object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stringattribute',
                                   to='metadata.Node')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                            related_name='stringattribute', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_related_name': '%(model_name)s',
            },
        ),
        migrations.CreateModel(
            name='UnmappedObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('parrent_label', models.TextField()),
                ('childrens', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='schemaedge',
            name='from_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_edge',
                                    to='metadata.SchemaNode'),
        ),
        migrations.AddField(
            model_name='schemaedge',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schema_edges',
                                    to='metadata.Schema'),
        ),
        migrations.AddField(
            model_name='schemaedge',
            name='to_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_edge',
                                    to='metadata.SchemaNode'),
        ),
        migrations.AddField(
            model_name='schemaattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes',
                                    to='metadata.SchemaNode'),
        ),
        migrations.AddField(
            model_name='rdfdatadump',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_dumps',
                                    to='metadata.Schema'),
        ),
        migrations.AddField(
            model_name='node',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances',
                                    to='metadata.SchemaNode'),
        ),
        migrations.AddField(
            model_name='node',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='node',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='intattribute',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intattribute',
                                    to='metadata.SchemaAttribute'),
        ),
        migrations.AddField(
            model_name='intattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intattribute',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='intattribute',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intattribute',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='imageattribute',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imageattribute',
                                    to='metadata.SchemaAttribute'),
        ),
        migrations.AddField(
            model_name='imageattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imageattribute',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='imageattribute',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='imageattribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='floatattribute',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floatattribute',
                                    to='metadata.SchemaAttribute'),
        ),
        migrations.AddField(
            model_name='floatattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floatattribute',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='floatattribute',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='floatattribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fileattribute',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fileattribute',
                                    to='metadata.SchemaAttribute'),
        ),
        migrations.AddField(
            model_name='fileattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fileattribute',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='fileattribute',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='fileattribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='edge',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances',
                                    to='metadata.SchemaEdge'),
        ),
        migrations.AddField(
            model_name='edge',
            name='from_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_edge',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='edge',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edge',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='edge',
            name='to_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_edge',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='datetimeattribute',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datetimeattribute',
                                    to='metadata.SchemaAttribute'),
        ),
        migrations.AddField(
            model_name='datetimeattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datetimeattribute',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='datetimeattribute',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='datetimeattribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boolattribute',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boolattribute',
                                    to='metadata.SchemaAttribute'),
        ),
        migrations.AddField(
            model_name='boolattribute',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boolattribute',
                                    to='metadata.Node'),
        ),
        migrations.AddField(
            model_name='boolattribute',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='boolattribute', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='schemanode',
            unique_together={('label', 'schema')},
        ),
        migrations.AlterUniqueTogether(
            name='schemaedge',
            unique_together={('label', 'schema', 'from_object', 'to_object')},
        ),
        migrations.AlterUniqueTogether(
            name='schemaattribute',
            unique_together={('label', 'object')},
        ),
        migrations.AlterUniqueTogether(
            name='edge',
            unique_together={('base', 'from_object', 'to_object')},
        ),
    ]
